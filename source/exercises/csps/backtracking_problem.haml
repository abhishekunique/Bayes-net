%html
  %head
    %title CSP
    %script{:type => "text/javascript", :src => "http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"}
    %script{:type => "text/javascript", :src => "http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"}
    %script{:type => "text/javascript", :src => "/javascripts/lib/bootstrap.js"}
    %script{:type => "text/javascript", :src => "/javascripts/lib/bootstrap-collapse.js"}
    %script{:type => "text/javascript", :src => "/javascripts/exercises/csps/backtracking_problem.js"}
    %link{:href => "/stylesheets/bootstrap.css", :rel => "stylesheet", :type => "text/css"}
  %body
    .span12#mainContent
      /Main Description Row
      .row
        .span12
          %h1{:style => "text-align: center"} Constraint Satisfaction Problems
          %h2{:style => "text-align: center"} Question 1
          %br
          %h1{:style => "text-align: center"} Airport
          %p{:style => "text-align: center"} You are in charge of scheduling arrivals for ATI (Alan Turing International).  Today, there will be 4 arrivals, each of which you must assign a runway and a time slot in the grid below
          %div{:style => "text-align: center"}
            %img{:src => "/images/exercises/csps/backtracking_problem/runway.png"}
          %p Here are the requirements for the schedule:
          %ol{:style => "list-style-type: lower-roman; align: center;"}
            %li (AF1) Air Force One (AF1) must land on runway R due to motorcade and secret service logistics.
            %li (AF1, B787, C) The airport closes (no landings) for one timeslot before, one during, and one after the arrival of AF1, but the Blue Angels are exempt from this closure.  You can assume that the airport is closed in the timeslot before T1 and the timeslot after T4.
            %li (BA) The Blue Angels (BA) will land in formation, which requires both runways at the same time.
            %li (B787, BA) The new Boeing 787 Dreamliner (B787) must land before the Blue Angels.
            %li (B787) The B787 must land on runway L.
            %li (C, 787) The Cessna (C) must not land beside or one timestep after the B787, due to turbulence considerations.
            %li (AF1, B787, C, BA) No two planes may land on the same runway at the same time (!!)
          %p We will represent the problem with 4 variables: AF1, B787, C, and BA.  The domain of BA is a time between 1 and 4 that the Blue Angels will arrive; the domain of the other three variables is a time between 1 and 4 plus: 'R' or 'L' to specify the runway being landed on.  Note that under this representation, constraint iii is absorbed into the variable definitio, thus we will simply ignore it.
      /Q1.1 row
      .row{:style => "margin: 0px -20px 0px 0px"}
        /description row
        .row
          .span12
            %h2 Question 1.1 (1 point)
            %p Which of the constraints are unary constraints? (Note that constraint iii is not listed.)
            .accordion#accordion1
              .accordion-group
                .accordion-heading
                  %a{:class => "accordion-toggle", :'data-toggle' => "collapse", :'data-parent' => "#accordion1", :href =>"#collapse1"}Constraints
                %div{:id => "collapse1", :class => "accordion-body collapse", :style => "height: 0px;"}
                  #accordion-inner
                    %ol{:style => "list-style-type: lower-roman"}
                      %li (AF1) Air Force One (AF1) must land on runway R due to motorcade and secret service logistics.
                      %li (AF1, B787, C) The airport closes (no landings) for one timeslot before, one during, and one after the arrival of AF1, but the Blue Angels are exempt from this closure.  You can assume that the airport is closed in the timeslot before T1 and the timeslot after T4.
                      %li (BA) The Blue Angels (BA) will land in formation, which requires both runways at the same time.
                      %li (B787, BA) The new Boeing 787 Dreamliner (B787) must land before the Blue Angels.
                      %li (B787) The B787 must land on runway L.
                      %li (C, 787) The Cessna (C) must not land beside or one timestep after the B787, due to turbulence considerations.
                      %li (AF1, B787, C, BA) No two planes may land on the same runway at the same time (!!)
        .row
          #a1_1.span5
            .row
              .span3
                %input#answers_0_0_0{:type => "checkbox"}
                %label{:style => "display: inline;"} i      
                %br
                %input#answers_0_0_1{:type => "checkbox"}
                %label{:style => "display: inline;"} ii
                %br
                %input#answers_0_0_2{:type => "checkbox"}
                %label{:style => "display: inline;"} iv
                %br
                %input#answers_0_0_3{:type => "checkbox"}
                %label{:style => "display: inline;"} v
                %br
                %input#answers_0_0_4{:type => "checkbox"}
                %label{:style => "display: inline;"} vi
                %br 
                %input#answers_0_0_5{:type => "checkbox"}
                %label{:style => "display: inline;"} vii
              .span2
                %button#b1_1 Check
                %h2{:id => "response1_1"}
      %br
      %br
      %br
      /Q1.2 Row (6)
      .row{:style => "margin: 0px -20px 0px 0px"}
        /description row
        .row
          .span12
            %h2 Question 1.2 (2 points)
            %p which values remain after enforcing all <em>unary</em> constraints?
            .accordion#accordion2
              .accordion-group
                .accordion-heading
                  %a{:class => "accordion-toggle", :'data-toggle' => "collapse", :'data-parent' => "#accordion2", :href =>"#collapse2"}Constraints    
                %div{:id => "collapse2", :class => "accordion-body collapse", :style => "height: 0px;"}
                  #accordion-inner
                    %ol{:style => "list-style-type: lower-roman"}
                      %li (AF1) Air Force One (AF1) must land on runway R due to motorcade and secret service logistics.
                      %li (AF1, B787, C) The airport closes (no landings) for one timeslot before, one during, and one after the arrival of AF1, but the Blue Angels are exempt from this closure.  You can assume that the airport is closed in the timeslot before T1 and the timeslot after T4.
                      %li (BA) The Blue Angels (BA) will land in formation, which requires both runways at the same time.
                      %li (B787, BA) The new Boeing 787 Dreamliner (B787) must land before the Blue Angels.
                      %li (B787) The B787 must land on runway L.
                      %li (C, 787) The Cessna (C) must not land beside or one timestep after the B787, due to turbulence considerations.
                      %li (AF1, B787, C, BA) No two planes may land on the same runway at the same time (!!)
        .row
          #a1_2.span5
            .row
              .span3
                %table{:class => "bold_first_column checkbox_array", :style => "text-align: center"}
                  %tr
                    %th
                    %th R1
                    %th R2
                    %th R3
                    %th R4
                    %th L1
                    %th L2
                    %th L3
                    %th L4
                  %tr
                    %td AF1
                    - (1...9).each do |i|
                      %td <input id="answers_0_1_#{i}" type="checkbox"/>
                  %tr
                    %td B787
                    - (9...17).each do |i|
                      %td <input id="answers_0_1_#{i}" type="checkbox"/>
                  %tr
                    %td C
                    - (17...25).each do |i|
                      %td <input id="answers_0_1_#{i}" type="checkbox"/>
                  %table{:class => "bold_first_column checkbox_array"}
                    %tr
                      %th
                      %th 1
                      %th 2
                      %th 3
                      %th 4
                    %tr
                      %td BA
                      - (25...29).each do |i|
                        %td <input id="answers_0_1_#{i}" type="checkbox"/>
              .span2
                %button#b1_2 Check
                %button#reset1_2 Reset
                %h2{:id => "response1_2"}         
      %br
      %br
      %br
      /Q1.3 Main Description row (6)
      .row
        .span12
          %h2 Question 1.3 (6 Points)
          %h2 Backtracking: the journey begins
          %p Let's perform backtracking search with forward checking. Select variables using the minimum remaining value heuristic, and use the degree heuristic to break possible ties. If ties still exist, choose in the order AF1, B787, BA, and C. To avoid ambiguity about degrees, the constraint graph is provided below. When applying the degree heuristic we do <em>not</em> include the unary constraints into your constraint count, as they simply encode a restriction on that variable's domain and the idea behind the degree heuristic is to choose the variable that is guessed to most constrain other variables to be assigned in the future.
          %div{:style => "text-align: center"}
            %img{:src => "/images/exercises/csps/backtracking_problem/csp_airport_constraint_graph.png"}
      /Q1.3.1 Row (6)
      .row{:style => "margin: 0px -20px 0px 0px"}
        /description row (8)
        .row
          .span12
            %h2 Question 1.3.1 (1 Point)
            %p What variable would we choose?
            .accordion#accordion3
              .accordion-group
                .accordion-heading
                  %a{:class => "accordion-toggle", :'data-toggle' => "collapse", :'data-parent' => "#accordion3", :href =>"#collapse3"}Constraints
                %div{:id => "collapse3", :class => "accordion-body collapse", :style => "height: 0px;"}
                  #accordion-inner
                    %ol{:style => "list-style-type: lower-roman"}
                      %li (AF1) Air Force One (AF1) must land on runway R due to motorcade and secret service logistics.
                      %li (AF1, B787, C) The airport closes (no landings) for one timeslot before, one during, and one after the arrival of AF1, but the Blue Angels are exempt from this closure.  You can assume that the airport is closed in the timeslot before T1 and the timeslot after T4.
                      %li (BA) The Blue Angels (BA) will land in formation, which requires both runways at the same time.
                      %li (B787, BA) The new Boeing 787 Dreamliner (B787) must land before the Blue Angels.
                      %li (B787) The B787 must land on runway L.
                      %li (C, 787) The Cessna (C) must not land beside or one timestep after the B787, due to turbulence considerations.
                      %li (AF1, B787, C, BA) No two planes may land on the same runway at the same time (!!)
        /Content row
        .row
          #a1_3_1.span5
            .row
              .span3
                %input#answers_0_2_0_0{:type => "radio", :name => "1_3_1"}
                %label{:style => "display: inline;"} AF1
                %br
                %input#answers_0_2_0_1{:type => "radio", :name => "1_3_1"}
                %label{:style => "display: inline;"} B787
                %br
                %input#answers_0_2_0_2{:type => "radio", :name => "1_3_1"}
                %label{:style => "display: inline;"} C
                %br
                %input#answers_0_2_0_3{:type => "radio", :name => "1_3_1"}
                %label{:style => "display: inline;"} BA
                %br
              .span2
                %button#b1_3_1 Check           
                %h2{:id => "response1_3_1"}
      %br
      %br
      %br
      /Q1.3.2 Row (6)
      .row{:style => "margin: 0px -20px 0px 0px"}
        /description row (8)
        .row
          .span12
            %h2 Question 1.3.2 (4 points)
            %p For the variable you chose, its domain should have 4 remaining values to assign (make sure you did!). For each value (from left to right), select that value as the only value in the domain of the variable you chose. Then run forward checking and select the remaining values for each of the other variables. Recall that forward checking propagates information from assigned variables to adjacent unassigned variables, but does <em>not</em> detect more distant failures.
            .accordion#accordion4
              .accordion-group
                .accordion-heading
                  %a{:class => "accordion-toggle", :'data-toggle' => "collapse", :'data-parent' => "#accordion4", :href =>"#collapse4"}Constraints
                %div{:id => "collapse4", :class => "accordion-body collapse", :style => "height: 0px;"}
                  #accordion-inner
                    %ol{:style => "list-style-type: lower-roman"}
                      %li (AF1) Air Force One (AF1) must land on runway R due to motorcade and secret service logistics.
                      %li (AF1, B787, C) The airport closes (no landings) for one timeslot before, one during, and one after the arrival of AF1, but the Blue Angels are exempt from this closure.  You can assume that the airport is closed in the timeslot before T1 and the timeslot after T4.
                      %li (BA) The Blue Angels (BA) will land in formation, which requires both runways at the same time.
                      %li (B787, BA) The new Boeing 787 Dreamliner (B787) must land before the Blue Angels.
                      %li (B787) The B787 must land on runway L.
                      %li (C, 787) The Cessna (C) must not land beside or one timestep after the B787, due to turbulence considerations.
                      %li (AF1, B787, C, BA) No two planes may land on the same runway at the same time (!!)
        /content row (8)
        .row
          /first row of values (10)
          .row
            .span6
              .span5#a1_3_2_v1
                .row
                  .span3 
                    %h2#132v1 Value 1
                    %table{:class => "bold_first_column checkbox_array"}
                      %tr
                        %th
                        %th R1
                        %th R2
                        %th R3
                        %th R4
                        %th L1
                        %th L2
                        %th L3
                        %th L4
                      %tr
                        %td AF1
                        - (1...9).each do |i|
                          %td <input id="answers_0_2_#{i}" type="checkbox"/>
                      %tr
                        %td B787
                        - (9...17).each do |i|
                          %td <input id="answers_0_2_#{i}" type="checkbox"/>
                      %tr
                        %td C
                        - (17...25).each do |i|
                          %td <input id="answers_0_2_#{i}" type="checkbox"/>
                    %table{:class => "bold_first_column checkbox_array"}
                      %tr
                        %th
                        %th 1
                        %th 2
                        %th 3
                        %th 4
                      %tr
                        %td BA
                        - (25...29).each do |i|
                          %td <input id="answers_0_2_#{i}" type="checkbox"/>
                  .span2
                    %button#b1_3_2_v1 Check
                    %button#reset1_3_2_v1 Reset 
                    %h2{:id => "response1_3_2_v1"}
            .span6             
              .span5#a1_3_2_v2
                .row
                  .span3
                    %h2#132v2 Value 2
                    %table{:class => "bold_first_column checkbox_array"}
                      %tr
                        %th
                        %th R1
                        %th R2
                        %th R3
                        %th R4
                        %th L1
                        %th L2
                        %th L3
                        %th L4
                      %tr
                        %td AF1
                        - (29...37).each do |i|
                          %td <input id="answers_0_2_#{i}" type="checkbox"/>
                      %tr
                        %td B787
                        - (37...45).each do |i|
                          %td <input id="answers_0_2_#{i}" type="checkbox"/>
                      %tr
                        %td C
                        - (45...53).each do |i|
                          %td <input id="answers_0_2_#{i}" type="checkbox"/>
                    %table{:class => "bold_first_column checkbox_array"}
                      %tr
                        %th
                        %th 1
                        %th 2
                        %th 3
                        %th 4
                      %tr
                        %td BA
                        - (53...57).each do |i|
                          %td <input id="answers_0_2_#{i}" type="checkbox"/>
                  .span2
                    %button#b1_3_2_v2 Check
                    %button#reset1_3_2_v2 Reset 
                    %h2{:id => "response1_3_2_v2"}
          %br
          /2nd Row of Values (10)
          .row
            .span6
              .span5#a1_3_2_v3
                .row
                  .span3
                    %h2#132v3 Value 3
                    %table{:class => "bold_first_column checkbox_array"}
                      %tr
                        %th
                        %th R1
                        %th R2
                        %th R3
                        %th R4
                        %th L1
                        %th L2
                        %th L3
                        %th L4
                      %tr
                        %td AF1
                        - (57...65).each do |i|
                          %td <input id="answers_0_2_#{i}" type="checkbox"/>
                      %tr
                        %td B787
                        - (65...73).each do |i|
                          %td <input id="answers_0_2_#{i}" type="checkbox"/>
                      %tr
                        %td C
                        - (73...81).each do |i|
                          %td <input id="answers_0_2_#{i}" type="checkbox"/>
                    %table{:class => "bold_first_column checkbox_array"}
                      %tr
                        %th
                        %th 1
                        %th 2
                        %th 3
                        %th 4
                      %tr
                        %td BA
                        - (81...85).each do |i|
                          %td <input id="answers_0_2_#{i}" type="checkbox"/>
                  .span2
                    %button#b1_3_2_v3 Check
                    %button#reset1_3_2_v3 Reset 
                    %h2{:id => "response1_3_2_v3"}
            .span6
              .span5#a1_3_2_v4
                .row
                  .span3
                    %h2#132v4 Value 4
                    %table{:class => "bold_first_column checkbox_array"}
                      %tr
                        %th
                        %th R1
                        %th R2
                        %th R3
                        %th R4
                        %th L1
                        %th L2
                        %th L3
                        %th L4
                      %tr
                        %td AF1
                        - (85...93).each do |i|
                          %td <input id="answers_0_2_#{i}" type="checkbox"/>
                      %tr
                        %td B787
                        - (93...101).each do |i|
                          %td <input id="answers_0_2_#{i}" type="checkbox"/>
                      %tr
                        %td C
                        - (101...109).each do |i|
                          %td <input id="answers_0_2_#{i}" type="checkbox"/>
                    %table{:class => "bold_first_column checkbox_array"}
                      %tr
                        %th
                        %th 1
                        %th 2
                        %th 3
                        %th 4
                      %tr
                        %td BA
                        - (109...113).each do |i|
                          %td <input id="answers_0_2_#{i}" type="checkbox"/>
                  .span2
                    %button#b1_3_2_v4 Check
                    %button#reset1_3_2_v4 Reset 
                    %h2{:id => "response1_3_2_v4"}
      %br
      %br
      %br
      /Q1.3.3 Row (6)
      .row
        /description row
        .row{:style => "margin: 0px -20px 0px 0px"}
          .span12
            %h2 Question 1.3.3
            %p Based on your results from forward checking for all four possible values above, which value would be assigned to that variable based on the least constraining value (LCV) heuristic?
            .accordion#accordion5
              .accordion-group
                .accordion-heading
                  %a{:class => "accordion-toggle", :'data-toggle' => "collapse", :'data-parent' => "#accordion5", :href =>"#collapse5"}Constraints
                %div{:id => "collapse5", :class => "accordion-body collapse", :style => "height: 0px;"}
                  #accordion-inner
                    %ol{:style => "list-style-type: lower-roman"}
                      %li (AF1) Air Force One (AF1) must land on runway R due to motorcade and secret service logistics.
                      %li (AF1, B787, C) The airport closes (no landings) for one timeslot before, one during, and one after the arrival of AF1, but the Blue Angels are exempt from this closure.  You can assume that the airport is closed in the timeslot before T1 and the timeslot after T4.
                      %li (BA) The Blue Angels (BA) will land in formation, which requires both runways at the same time.
                      %li (B787, BA) The new Boeing 787 Dreamliner (B787) must land before the Blue Angels.
                      %li (B787) The B787 must land on runway L.
                      %li (C, 787) The Cessna (C) must not land beside or one timestep after the B787, due to turbulence considerations.
                      %li (AF1, B787, C, BA) No two planes may land on the same runway at the same time (!!)
      /content row (8)
      .row
        #a1_3_3.span5
          .row
            .span3
              %input#answers_0_2_2_0{:type => "radio", :name => "1_3_3"}
              %label{:style => "display: inline;"} R1
              %br
              %input#answers_0_2_2_1{:type => "radio", :name => "1_3_3"}
              %label{:style => "display: inline;"} R2
              %br
              %input#answers_0_2_2_2{:type => "radio", :name => "1_3_3"}
              %label{:style => "display: inline;"} R3
              %br
              %input#answers_0_2_2_3{:type => "radio", :name => "1_3_3"}
              %label{:style => "display: inline;"} R4
              %br
              %input#answers_0_2_2_4{:type => "radio", :name => "1_3_3"}
              %label{:style => "display: inline;"} L1
              %br
              %input#answers_0_2_2_5{:type => "radio", :name => "1_3_3"}
              %label{:style => "display: inline;"} L2
              %br
              %input#answers_0_2_2_6{:type => "radio", :name => "1_3_3"}
              %label{:style => "display: inline;"} L3
              %br
              %input#answers_0_2_2_7{:type => "radio", :name => "1_3_3"}
              %label{:style => "display: inline;"} L4
              %br
              %input#answers_0_2_2_8{:type => "radio", :name => "1_3_3"}
              %label{:style => "display: inline;"} 1
              %br
              %input#answers_0_2_2_9{:type => "radio", :name => "1_3_3"}
              %label{:style => "display: inline;"} 2
              %br
              %input#answers_0_2_2_10{:type => "radio", :name => "1_3_3"}
              %label{:style => "display: inline;"} 3
              %br
              %input#answers_0_2_2_11{:type => "radio", :name => "1_3_3"}
              %label{:style => "display: inline;"} 4
              %br
            .span2
              %button#b1_3_3 Check 
              %h2{:id => "response1_3_3"} 
      %br
      %br
      %br
      /Q1.4 Row (6)
      .row
        .span12
          %h2 Question 1.4 (3 points)
          %h2 Backtracking: the two values
          %p Assign the value based on the LCV heuristic. We step down the search tree to show how backtracking works.
      /Q1.4.1 (6)
      .row{:style => "margin: 0px -20px 0px 0px"}
        /description row (8)
        .row
          .span12
            %h2 Question 1.4.1 (1 point)
            %p Based on the same heuristics, which variable should we assign next? To read off the MRV, look at the appropriate table that you filled out in 1.3.2.
            .accordion#accordion6
              .accordion-group
                .accordion-heading
                  %a{:class => "accordion-toggle", :'data-toggle' => "collapse", :'data-parent' => "#accordion6", :href =>"#collapse6"}Constraints
                %div{:id => "collapse6", :class => "accordion-body collapse", :style => "height: 0px;"}
                  #accordion-inner
                    %ol{:style => "list-style-type: lower-roman"}
                      %li (AF1) Air Force One (AF1) must land on runway R due to motorcade and secret service logistics.
                      %li (AF1, B787, C) The airport closes (no landings) for one timeslot before, one during, and one after the arrival of AF1, but the Blue Angels are exempt from this closure.  You can assume that the airport is closed in the timeslot before T1 and the timeslot after T4.
                      %li (BA) The Blue Angels (BA) will land in formation, which requires both runways at the same time.
                      %li (B787, BA) The new Boeing 787 Dreamliner (B787) must land before the Blue Angels.
                      %li (B787) The B787 must land on runway L.
                      %li (C, 787) The Cessna (C) must not land beside or one timestep after the B787, due to turbulence considerations.
                      %li (AF1, B787, C, BA) No two planes may land on the same runway at the same time (!!)
        /content row (8)
        .row
          #a1_4_1.span5
            .row
              .span3
                %input#answers_0_3_0_0{:type => "radio", :name => "1_4_1"}
                %label{:style => "display: inline;"} AF1
                %br
                %input#answers_0_3_0_1{:type => "radio", :name => "1_4_1"}
                %label{:style => "display: inline;"} B787
                %br
                %input#answers_0_3_0_2{:type => "radio", :name => "1_4_1"}
                %label{:style => "display: inline;"} C
                %br
                %input#answers_0_3_0_3{:type => "radio", :name => "1_4_1"}
                %label{:style => "display: inline;"} BA
                %br
              .span2
                %button#b1_4_1 Check 
                %h2{:id => "response1_4_1"} 
      %br
      %br
      %br
      /Q1.4.2 (6)
      .row{:style => "margin: 0px -20px 0px 0px"}
        /description row (8)
        .row
          .span12
            %h2 Question 1.4.2 (2 points)
            %p The variable you have chosen above should have 2 remaining values. Similar to (d), run forward checking for the two values, and select the remaining domains (including the assigned values) in the tables below.
            .accordion#accordion7
              .accordion-group
                .accordion-heading
                  %a{:class => "accordion-toggle", :'data-toggle' => "collapse", :'data-parent' => "#accordion7", :href =>"#collapse7"}Constraints
                %div{:id => "collapse7", :class => "accordion-body collapse", :style => "height: 0px;"}
                  #accordion-inner
                    %ol{:style => "list-style-type: lower-roman"}
                      %li (AF1) Air Force One (AF1) must land on runway R due to motorcade and secret service logistics.
                      %li (AF1, B787, C) The airport closes (no landings) for one timeslot before, one during, and one after the arrival of AF1, but the Blue Angels are exempt from this closure.  You can assume that the airport is closed in the timeslot before T1 and the timeslot after T4.
                      %li (BA) The Blue Angels (BA) will land in formation, which requires both runways at the same time.
                      %li (B787, BA) The new Boeing 787 Dreamliner (B787) must land before the Blue Angels.
                      %li (B787) The B787 must land on runway L.
                      %li (C, 787) The Cessna (C) must not land beside or one timestep after the B787, due to turbulence considerations.
                      %li (AF1, B787, C, BA) No two planes may land on the same runway at the same time (!!)
        /content row (8)
        .row
          /first row of values (10)
          .row
            .span6
              .span5#a1_4_2_v1
                .row
                  .span3
                    %h2#142v1 Value 1
                    %table{:class => "bold_first_column checkbox_array"}
                      %tr
                        %th
                        %th R1
                        %th R2
                        %th R3
                        %th R4
                        %th L1
                        %th L2
                        %th L3
                        %th L4
                      %tr
                        %td AF1
                        - (1...9).each do |i|
                          %td <input id="answers_0_3_#{i}" type="checkbox"/>
                      %tr
                        %td B787
                        - (9...17).each do |i|
                          %td <input id="answers_0_3_#{i}" type="checkbox"/>
                      %tr
                        %td C
                        - (17...25).each do |i|
                          %td <input id="answers_0_3_#{i}" type="checkbox"/>
                    %table{:class => "bold_first_column checkbox_array"}
                      %tr
                        %th
                        %th 1
                        %th 2
                        %th 3
                        %th 4
                      %tr
                        %td BA
                        - (25...29).each do |i|
                          %td <input id="answers_0_3_#{i}" type="checkbox"/>
                  .span2
                    %button#b1_4_2_v1 Check
                    %button#reset1_4_2_v1 Reset 
                    %h2{:id => "response1_4_2_v1"}
            .span6
              .span5#a1_4_2_v2
                .row
                  .span3
                    %h2#142v2 Value 2
                    %table{:class => "bold_first_column checkbox_array"}
                      %tr
                        %th
                        %th R1
                        %th R2
                        %th R3
                        %th R4
                        %th L1
                        %th L2
                        %th L3
                        %th L4
                      %tr
                        %td AF1
                        - (29...37).each do |i|
                          %td <input id="answers_0_3_#{i}" type="checkbox"/>
                      %tr
                        %td B787
                        - (37...45).each do |i|
                          %td <input id="answers_0_3_#{i}" type="checkbox"/>
                      %tr
                        %td C
                        - (45...53).each do |i|
                          %td <input id="answers_0_3_#{i}" type="checkbox"/>
                    %table{:class => "bold_first_column checkbox_array"}
                      %tr
                        %th
                        %th 1
                        %th 2
                        %th 3
                        %th 4
                      %tr
                        %td BA
                        - (53...57).each do |i|
                          %td <input id="answers_0_3_#{i}" type="checkbox"/>
                  .span2
                    %button#b1_4_2_v2 Check
                    %button#reset1_4_2_v2 Reset 
                    %h2{:id => "response1_4_2_v2"}
      %br
      %br
      %br
      /Q1.5 Row (6)
      .row
        .span12
          %h2 Question 1.5 (4 points)
          %h2 Backtracking: Return of the King
          %p You should have seen that either values will lead to at least one of the variables' domains being empty, so backtracking is necessary. This brings us back to the previous level in the search, where we assigned a value to the first variable you chose. Your backtracking search implementation would at this point pick the next value according to the LCV heuristic, but it turns out that the next value has an empty domain for one of the variables, so that leads to a dead end. The backtracking search then continues by assigning the third value according to the LCV heuristic. You will start from there.
      /Q1.5.1 Row (6) [Numbered 1.5.0 in the key]
      .row{:style => "margin: 0px -20px 0px 0px"}
        /description row (8)
        .row
          .span12
            %h2 Question 1.5.1
            %p Which is this third value according to the LCV heuristic?
            .accordion#accordion8
              .accordion-group
                .accordion-heading
                  %a{:class => "accordion-toggle", :'data-toggle' => "collapse", :'data-parent' => "#accordion8", :href =>"#collapse8"}Constraints
                %div{:id => "collapse8", :class => "accordion-body collapse", :style => "height: 0px;"}
                  #accordion-inner
                    %ol{:style => "list-style-type: lower-roman"}
                      %li (AF1) Air Force One (AF1) must land on runway R due to motorcade and secret service logistics.
                      %li (AF1, B787, C) The airport closes (no landings) for one timeslot before, one during, and one after the arrival of AF1, but the Blue Angels are exempt from this closure.  You can assume that the airport is closed in the timeslot before T1 and the timeslot after T4.
                      %li (BA) The Blue Angels (BA) will land in formation, which requires both runways at the same time.
                      %li (B787, BA) The new Boeing 787 Dreamliner (B787) must land before the Blue Angels.
                      %li (B787) The B787 must land on runway L.
                      %li (C, 787) The Cessna (C) must not land beside or one timestep after the B787, due to turbulence considerations.
                      %li (AF1, B787, C, BA) No two planes may land on the same runway at the same time (!!)
        /content row
        .row
          .span5#a1_5_1
            .row
              .span3
                %input#answers_0_4_-1_0{:type => "radio", :name => "1_5_0"}
                %label{:style => "display: inline;"} R1
                %br
                %input#answers_0_4_-1_1{:type => "radio", :name => "1_5_0"}
                %label{:style => "display: inline;"} R2
                %br
                %input#answers_0_4_-1_2{:type => "radio", :name => "1_5_0"}
                %label{:style => "display: inline;"} R3
                %br
                %input#answers_0_4_-1_3{:type => "radio", :name => "1_5_0"}
                %label{:style => "display: inline;"} R4
                %br
                %input#answers_0_4_-1_4{:type => "radio", :name => "1_5_0"}
                %label{:style => "display: inline;"} L1
                %br
                %input#answers_0_4_-1_5{:type => "radio", :name => "1_5_0"}
                %label{:style => "display: inline;"} L2
                %br
                %input#answers_0_4_-1_6{:type => "radio", :name => "1_5_0"}
                %label{:style => "display: inline;"} L3
                %br
                %input#answers_0_4_-1_7{:type => "radio", :name => "1_5_0"}
                %label{:style => "display: inline;"} L4
                %br
                %input#answers_0_4_-1_8{:type => "radio", :name => "1_5_0"}
                %label{:style => "display: inline;"} 1
                %br
                %input#answers_0_4_-1_9{:type => "radio", :name => "1_5_0"}
                %label{:style => "display: inline;"} 2
                %br
                %input#answers_0_4_-1_10{:type => "radio", :name => "1_5_0"}
                %label{:style => "display: inline;"} 3
                %br
                %input#answers_0_4_-1_11{:type => "radio", :name => "1_5_0"}
                %label{:style => "display: inline;"} 4
                %br
              .span2
                %button#b1_5_0 Check
                %h2{:id => "response1_5_0"}
      %br
      %br
      %br
      /Q1.5.2 Row (6) [1.5.1 in the key]
      .row{:style => "margin: 0px -20px 0px 0px"}
        /description row (8)
        .row
          .span12
            %h2 Question 1.5.2
            %p Now, what variable should be chosen as the next step, based on the heuristics? Note: an unassigned variable with only one remaining possible value still needs to be assigned; do not confuse it with an already assigned variable.
            .accordion#accordion9
              .accordion-group
                .accordion-heading
                  %a{:class => "accordion-toggle", :'data-toggle' => "collapse", :'data-parent' => "#accordion9", :href =>"#collapse9"}Constraints
                %div{:id => "collapse9", :class => "accordion-body collapse", :style => "height: 0px;"}
                  #accordion-inner
                    %ol{:style => "list-style-type: lower-roman"}
                      %li (AF1) Air Force One (AF1) must land on runway R due to motorcade and secret service logistics.
                      %li (AF1, B787, C) The airport closes (no landings) for one timeslot before, one during, and one after the arrival of AF1, but the Blue Angels are exempt from this closure.  You can assume that the airport is closed in the timeslot before T1 and the timeslot after T4.
                      %li (BA) The Blue Angels (BA) will land in formation, which requires both runways at the same time.
                      %li (B787, BA) The new Boeing 787 Dreamliner (B787) must land before the Blue Angels.
                      %li (B787) The B787 must land on runway L.
                      %li (C, 787) The Cessna (C) must not land beside or one timestep after the B787, due to turbulence considerations.
        /content row (8)
        .row
          .span5#a1_5_2
            .row
              .span3
                %input#answers_0_4_0_0{:type => "radio", :name => "1_5_1"}
                %label{:style => "display: inline;"} AF1
                %br
                %input#answers_0_4_0_1{:type => "radio", :name => "1_5_1"}
                %label{:style => "display: inline;"} B787
                %br
                %input#answers_0_4_0_2{:type => "radio", :name => "1_5_1"}
                %label{:style => "display: inline;"} C
                %br
                %input#answers_0_4_0_3{:type => "radio", :name => "1_5_1"}
                %label{:style => "display: inline;"} BA
                %br
              .span2
                %button#b1_5_2 Check
                %h2{:id => "response1_5_2"}
      %br
      %br
      %br
      /Q1.5.3 Row (6) [1.5.2 in the key]
      .row{:style => "margin: 0px -20px 0px 0px"}
        /description row (8)
        .row
          .span12
            %h2 Question 1.5.3 (1 point)
            %p For the variable you have chosen in the previous part, run forward checking for its only possible value.
            .accordion#accordion10
              .accordion-group
                .accordion-heading
                  %a{:class => "accordion-toggle", :'data-toggle' => "collapse", :'data-parent' => "#accordion10", :href =>"#collapse10"}Constraints
                %div{:id => "collapse10", :class => "accordion-body collapse", :style => "height: 0px;"}
                  #accordion-inner
                    %ol{:style => "list-style-type: lower-roman"}
                      %li (AF1) Air Force One (AF1) must land on runway R due to motorcade and secret service logistics.
                      %li (AF1, B787, C) The airport closes (no landings) for one timeslot before, one during, and one after the arrival of AF1, but the Blue Angels are exempt from this closure.  You can assume that the airport is closed in the timeslot before T1 and the timeslot after T4.
                      %li (BA) The Blue Angels (BA) will land in formation, which requires both runways at the same time.
                      %li (B787, BA) The new Boeing 787 Dreamliner (B787) must land before the Blue Angels.
                      %li (B787) The B787 must land on runway L.
                      %li (C, 787) The Cessna (C) must not land beside or one timestep after the B787, due to turbulence considerations.
                      %li (AF1, B787, C, BA) No two planes may land on the same runway at the same time (!!)
        /content row (8)
        .row
          .span5#a1_5_3
            .row
              .span3
                %h2#152v1 Value 1
                %table{:class => "bold_first_column checkbox_array"}
                  %tr
                    %th
                    %th R1
                    %th R2
                    %th R3
                    %th R4
                    %th L1
                    %th L2
                    %th L3
                    %th L4
                  %tr
                    %td AF1
                    - (1...9).each do |i|
                      %td <input id="answers_0_4_#{i}" type="checkbox"/>
                  %tr
                    %td B787
                    - (9...17).each do |i|
                      %td <input id="answers_0_4_#{i}" type="checkbox"/>
                  %tr
                    %td C
                    - (17...25).each do |i|
                      %td <input id="answers_0_4_#{i}" type="checkbox"/>
                %table{:class => "bold_first_column checkbox_array"}
                  %tr
                    %th
                    %th 1
                    %th 2
                    %th 3
                    %th 4
                  %tr
                    %td BA
                    - (25...29).each do |i|
                      %td <input id="answers_0_4_#{i}" type="checkbox"/>
              .span2
                %button#b1_5_3 Check
                %button#reset1_5_3 Reset
                %h2{:id => "response1_5_3"}
      %br
      %br
      %br
      /Q1.5.4 Row
      .row{:style => "margin: 0px -20px 0px 0px"}
        /description row (8)
        .row
          .span12
            %h2 Question 1.5.4 (1 point)
            %p Backtracking search now assigns this first (and only remaining) value to the variable chosen in the previous part. You already ran forward checking for this assignment with the result above. What is the variable to assign next, based on MRV?
            .accordion#accordion11
              .accordion-group
                .accordion-heading
                  %a{:class => "accordion-toggle", :'data-toggle' => "collapse", :'data-parent' => "#accordion11", :href =>"#collapse11"}Constraints
                %div{:id => "collapse11", :class => "accordion-body collapse", :style => "height: 0px;"}
                  #accordion-inner
                    %ol{:style => "list-style-type: lower-roman"}
                      %li (AF1) Air Force One (AF1) must land on runway R due to motorcade and secret service logistics.
                      %li (AF1, B787, C) The airport closes (no landings) for one timeslot before, one during, and one after the arrival of AF1, but the Blue Angels are exempt from this closure.  You can assume that the airport is closed in the timeslot before T1 and the timeslot after T4.
                      %li (BA) The Blue Angels (BA) will land in formation, which requires both runways at the same time.
                      %li (B787, BA) The new Boeing 787 Dreamliner (B787) must land before the Blue Angels.
                      %li (B787) The B787 must land on runway L.
                      %li (C, 787) The Cessna (C) must not land beside or one timestep after the B787, due to turbulence considerations.
                      %li (AF1, B787, C, BA) No two planes may land on the same runway at the same time (!!)
        /content row
        .row
          .span5#a1_5_4
            .row
              .span3
                %input#answers_0_4_2_0{:type => "radio", :name => "1_5_3"}
                %label{:style => "display: inline;"} AF1
                %br
                %input#answers_0_4_2_1{:type => "radio", :name => "1_5_3"}
                %label{:style => "display: inline;"} B787
                %br
                %input#answers_0_4_2_2{:type => "radio", :name => "1_5_3"}
                %label{:style => "display: inline;"} C
                %br
                %input#answers_0_4_2_3{:type => "radio", :name => "1_5_3"}
                %label{:style => "display: inline;"} BA
                %br
              .span2
                %button#b1_5_4 Check
                %h2{:id => "response1_5_4"}
      %br
      %br
      %br
      /Q1.5.5 Row (6)
      .row{:style => "margin: 0px -20px 0px 0px"}
        /description row (8)
        .row
          .span12
            %h2 Question 1.5.5
            %p The variable you have chosen should have only 1 possible value to assign. Assign that value, and run forward checking. Select the remaining domains in the table below. (Hint: did anything change?)
            %p At this stage, you should have only one variable not assigned yet. Assigning any possible value will lead you to a leaf node, which is a solution to the original CSP: this is how you solve a CSP by searching. Hooray!
            .accordion#accordion12
              .accordion-group
                .accordion-heading
                  %a{:class => "accordion-toggle", :'data-toggle' => "collapse", :'data-parent' => "#accordion12", :href =>"#collapse12"}Constraints
                %div{:id => "collapse12", :class => "accordion-body collapse", :style => "height: 0px;"}
                  #accordion-inner
                    %ol{:style => "list-style-type: lower-roman"}
                      %li (AF1) Air Force One (AF1) must land on runway R due to motorcade and secret service logistics.
                      %li (AF1, B787, C) The airport closes (no landings) for one timeslot before, one during, and one after the arrival of AF1, but the Blue Angels are exempt from this closure.  You can assume that the airport is closed in the timeslot before T1 and the timeslot after T4.
                      %li (BA) The Blue Angels (BA) will land in formation, which requires both runways at the same time.
                      %li (B787, BA) The new Boeing 787 Dreamliner (B787) must land before the Blue Angels.
                      %li (B787) The B787 must land on runway L.
                      %li (C, 787) The Cessna (C) must not land beside or one timestep after the B787, due to turbulence considerations.
                      %li (AF1, B787, C, BA) No two planes may land on the same runway at the same time (!!)
        /content row
        .row
          .span5#a1_5_5
            .row
              .span3
                %h2#154v1 Value 1
                %table{:class => "bold_first_column checkbox_array"}
                  %tr
                    %th
                    %th R1
                    %th R2
                    %th R3
                    %th R4
                    %th L1
                    %th L2
                    %th L3
                    %th L4
                  %tr
                    %td AF1
                    - (1...9).each do |i|
                      %td <input id="answers_0_5_#{i}" type="checkbox"/>
                  %tr
                    %td B787
                    - (9...17).each do |i|
                      %td <input id="answers_0_5_#{i}" type="checkbox"/>
                  %tr
                    %td C
                    - (17...25).each do |i|
                      %td <input id="answers_0_5_#{i}" type="checkbox"/>
                %table{:class => "bold_first_column checkbox_array"}
                  %tr
                    %th
                    %th 1
                    %th 2
                    %th 3
                    %th 4
                  %tr
                    %td BA
                    - (25...29).each do |i|
                      %td <input id="answers_0_5_#{i}" type="checkbox"/>
              .span2
                %button#b1_5_5 Check
                %button#reset1_5_5 Reset
                %h2{:id => "response1_5_5"}
